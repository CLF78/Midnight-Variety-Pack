Diagnostics:
  ClangTidy:
    Add: [
      bugprone-argument-comment,
      bugprone-assignment-in-if-condition,
      bugprone-bool-pointer-implicit-conversion,
      bugprone-branch-clone,
      bugprone-casting-through-void,
      bugprone-chained-comparison,
      bugprone-compare-pointer-to-member-virtual-function,
      bugprone-copy-constructor-init,
      bugprone-dangling-handle,
      bugprone-dynamic-static-initializers,
      bugprone-fold-init-type,
      bugprone-forward-declaration-namespace,
      bugprone-implicit-widening-of-multiplication-result,
      bugprone-inc-dec-in-conditions,
      bugprone-incorrect-roundings,
      bugprone-infinite-loop,
      bugprone-integer-division,
      bugprone-macro-parentheses,
      bugprone-macro-repeated-side-effects,
      bugprone-misplaced-operator-in-strlen-in-alloc,
      bugprone-misplaced-pointer-arithmetic-in-alloc,
      bugprone-misplaced-widening-cast,
      bugprone-multi-level-implicit-pointer-conversion,
      bugprone-multiple-new-in-one-expression,
      bugprone-multiple-statement-macro,
      bugprone-non-zero-enum-to-bool-conversion,
      bugprone-not-null-terminated-result,
      bugprone-return-const-ref-from-parameter,
      bugprone-parent-virtual-call,
      bugprone-pointer-arithmetic-on-polymorphic-object,
      bugprone-redundant-branch-condition,
      bugprone-signed-char-misuse,
      bugprone-sizeof-container,
      bugprone-sizeof-expression,
      bugprone-string-literal-with-embedded-nul,
      bugprone-suspicious-enum-usage,
      bugprone-suspicious-include,
      bugprone-suspicious-memory-comparison,
      bugprone-suspicious-memset-usage,
      bugprone-suspicious-missing-comma,
      bugprone-suspicious-semicolon,
      bugprone-suspicious-string-compare,
      bugprone-swapped-arguments,
      bugprone-switch-missing-default-caseÂ¶,
      bugprone-terminating-continue,
      bugprone-too-small-loop-variable,
      bugprone-undefined-memory-manipulation,
      bugprone-undelegated-constructor,
      bugprone-unused-local-non-trivial-variable,
      bugprone-unused-raii,
      bugprone-unused-return-value,
      bugprone-virtual-near-miss,
      cert-dcl58-cpp,
      cert-err33-c,
      cert-err34-c,
      cert-err52-cpp,
      cert-flp30-c,
      cert-mem57-cpp,
      cert-oop58-cpp,
      cppcoreguidelines-avoid-const-or-ref-data-members,
      cppcoreguidelines-avoid-goto,
      cppcoreguidelines-init-variables,
      cppcoreguidelines-interfaces-global-init,
      cppcoreguidelines-narrowing-conversions,
      cppcoreguidelines-prefer-member-initializer,
      google-build-namespaces,
      google-build-using-namespace,
      google-default-arguments,
      google-explicit-constructor,
      google-global-names-in-headers,
      hicpp-multiway-paths-covered,
      llvm-header-guard,
      llvm-include-order,
      llvm-namespace-comment,
      misc-confusable-identifiers,
      misc-const-correctness,
      misc-definitions-in-headers,
      misc-header-include-cycle,
      misc-include-cleaner,
      misc-misleading-bidirectional,
      misc-misleading-identifier,
      misc-misplaced-const,
      misc-no-recursion,
      misc-redundant-expression,
      misc-static-assert,
      misc-unconventional-assign-operator,
      misc-unused-alias-decls,
      misc-unused-parameters,
      misc-unused-using-decls,
      misc-use-internal-linkage,
      modernize-macro-to-enum,
      modernize-redundant-void-arg,
      modernize-use-bool-literals,
      modernize-use-designated-initializers,
      modernize-use-nullptr,
      performance-implicit-conversion-in-loop,
      performance-move-constructor-init,
      performance-no-automatic-move,
      performance-trivially-destructible,
      performance-unnecessary-copy-initialization,
      performance-unnecessary-value-param,
      readability-avoid-const-params-in-decls,
      readability-avoid-nested-conditional-operator,
      readability-avoid-return-with-void-value,
      readability-avoid-unconditional-preprocessor-if,
      readability-const-return-type,
      readability-convert-member-functions-to-static,
      readability-delete-null-pointer,
      readability-duplicate-include,
      readability-else-after-return,
      readability-enum-initial-value,
      readability-inconsistent-declaration-parameter-name,
      readability-isolate-declaration,
      readability-make-member-function-const,
      readability-math-missing-parentheses,
      readability-misleading-indentation,
      readability-misplaced-array-index,
      readability-named-parameter,
      readability-non-const-parameter,
      readability-redundant-access-specifiers,
      readability-redundant-casting,
      readability-redundant-control-flow,
      readability-redundant-declaration,
      readability-redundant-function-ptr-dereference,
      readability-redundant-inline-specifier,
      readability-redundant-member-init,
      readability-redundant-preprocessor,
      readability-reference-to-constructed-temporary,
      readability-simplify-boolean-expr,
      readability-static-accessed-through-instance,
      readability-static-definition-in-anonymous-namespace,
      readability-suspicious-call-argument,
      readability-uppercase-literal-suffix,
      clang-analyzer-core.BitwiseShift,
      clang-analyzer-core.CallAndMessage,
      clang-analyzer-core.DivideZero,
      clang-analyzer-core.NonNullParamChecker,
      clang-analyzer-core.NullDereference,
      clang-analyzer-core.StackAddressEscape,
      clang-analyzer-core.UndefinedBinaryOperatorResult,
      clang-analyzer-core.VLASize,
      clang-analyzer-core.uninitialized.ArraySubscript,
      clang-analyzer-core.uninitialized.Assign,
      clang-analyzer-core.uninitialized.Branch,
      clang-analyzer-core.uninitialized.CapturedBlockVariable,
      clang-analyzer-core.uninitialized.NewArraySize,
      clang-analyzer-core.uninitialized.UndefReturn,
      clang-analyzer-cplusplus.ArrayDelete,
      clang-analyzer-cplusplus.NewDelete,
      clang-analyzer-cplusplus.NewDeleteLeaks,
      clang-analyzer-cplusplus.PlacementNew,
      clang-analyzer-cplusplus.PureVirtualCall,
      clang-analyzer-deadcode.DeadStores,
      clang-analyzer-optin.cplusplus.UninitializedObject,
      clang-analyzer-optin.cplusplus.VirtualCall,
      clang-analyzer-optin.taint.TaintedAlloc,
      clang-analyzer-security.FloatLoopCounter,
      clang-analyzer-security.insecureAPI.UncheckedReturn,
      clang-analyzer-security.insecureAPI.strcpy,
      clang-analyzer-valist.CopyToSelf,
      clang-analyzer-valist.Uninitialized,
      clang-analyzer-valist.Unterminated
    ]
    CheckOptions:
      bugprone-argument-comment.StrictMode: true,
      bugprone-not-null-terminated-result.WantToUseSafeFunctions: false,
      bugprone-suspicious-enum-usage.StrictMode: true,
      misc-unused-parameters.IgnoreVirtual: true,
      readability-redundant-access-specifiers.CheckFirstDeclaration: true,
      readability-redundant-casting.IgnoreTypeAliases: true,
      readability-simplify-boolean-expr.ChainedConditionalReturn: true,
      readability-simplify-boolean-expr.ChainedConditionalAssignment: true,
      readability-simplify-boolean-expr.SimplifyDeMorgan: true,
      readability-simplify-boolean-expr.SimplifyDeMorganRelaxed: true
  UnusedIncludes: Strict
